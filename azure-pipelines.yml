trigger:
- main
- feature-*

pool:
  vmImage: ubuntu-latest
  
jobs:
- job: build
  displayName: 'Build'
  steps:
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        **/build/libs/testing-*.jar
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: appJar
      publishLocation: 'Container'

- job: sonar
  workspace:
    clean: all
  displayName:  Code Review
  steps:
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonarcloud'
      organization: 'devops-foundation'
      projectKey: 'DevOps-Foundation_Microservicio-spring'
      projectName: 'testing-web'
    displayName: 'Preparing Sonarqube Environment'
    
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: "sonarqube"
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.3'
    displayName: 'Analyze current Branch'
    
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'Publish Analysis Results'

- job: buildimage
  displayName:  Build Image
  dependsOn: build
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appJar'
      downloadPath: '$(Pipeline.Workspace)/build/libs'
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker-registry'
      repository: 'microservicio-spring'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'